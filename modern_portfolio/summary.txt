1 - Intro & Sass Workflow Setup

Created folders and index.html and main.scss files. The browser doesn't read scss so we need to use something to compile it down to css. Using node-sass. Must use npm.

Must create package.json first using npm init. Then install node-sass using npm i node-sass. It will add the dependency to package.json.

Now we need to use an npm script to set up sass. In the package.json scripts, put "sass": "node-sass -w scss/ -o dist/css/ --recursive". This runs the node-sass program, -w means it will watch the scss folder, -o means it will output the compiled sass the dist/css. Run the script using npm run sass.

Now in the main.scss file we write some sass. $primary-color: #444, then body {background: $primary-color}. Then a css file is created and this is converted to css automatically.

When we installed node-sass it added loads of files to a folder called node_modules. When we upload all of this to a repository, we don't want to include these files, so we add 'node-modules' to a file called .gitignore.

Now we initialise a git repository. git init in the terminal. git add ., to add all. Then git commit -m 'Initial workflow setup'. Now it's been committed, though we won't push it to GitHub yet.

2 - Homepage & Main Sass

Fairly standard HTML. The menu button is created with the 3 btn-line divs.

Sass stuff - lighten function, first parameter is the original color, the second is how much we want to lighten it. Wrapped this in rgba after too.

Also used nesting, fairly obvious what they each do.

Also used mixins for a transition, as we'll be using it again. '@mixin name {transition...}' at the top, and to use it '@include name()' in the selector.

Initially we created an overlay element, but then we changed it to use the ':after' pseudo-element.

And finally we moved all of the sass variables and mixins to a seperate scss file, _config.scss. At the top of main.scss we included the statement '@import 'config'', tidier.

3 - Rotating Menu button

Used JavaScript to toggle the menu, not working yet, but it does add and remove the relevant classes. Set a boolean value to check what state it is in and apply/remove the relevant classes based on that.

Then wrote the sass for the rotating menu button. Each individual line does something different.

4 - Menu Overlay & Responsiveness

In sass, if you have a class such as .menu, and nested within a class called .menu-nav, you can use the sass selector &-nav.

To slide the overlay parts in to the page, we use transform: translate3d();

For the text that slides in in the menu, we have a 0.1s delay for each one, so 0.1, 0.2, 0.3 and 0.4. Used a sass for loop for this - @for $x from 1 through 4.

Responsiveness - Created new scss files called _menu.scss and _mobile.scss for the MQ mixins. It's hard to explain, look at the files. Look in _config.scss too.

5 - About Page with CSS Grid

In _config.scss we made a function that changes the color of the text and menu icon from white to black if the primary color is light. Applied this to the scss styles by entering the function name instead of the actual color name (white).

In about.html, put all of the markup, much of it the same as index.html. Sizing it with CSS Grid in main.scss.

To make it so the footer always remains at the bottom, we create a sticky footer. At the moment the main element has a height of 100%, and it is sized according to the content within. If there is no content, the footer floats off the bottom. To fix this, we used min-height on main set at calc(100vh - 60px), 60px being the height of the footer.

Also changed stuff in the _mobile.scss file too. Moved the @import 'mobile' line to the bottom too as we want the MQs to run after the main CSS.

6 - Work & Contact Pages

Work page HTML. Added responsiveness using grid-template-columns. Also styled buttons by creating a .btn class and styling that, then using '@extend .btn' in each individual button style. Even though there is no btn class.

Contact page was the same, used Flexbox instead of Grid though.

7 - Website Deployment

Deploying it to Github page